version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: travel-planner-db
    environment:
      POSTGRES_DB: travel_planner
      POSTGRES_USER: travel_user
      POSTGRES_PASSWORD: travel_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U travel_user -d travel_planner"]
      interval: 30s
      timeout: 10s
      retries: 3

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: travel-planner-api
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_USERNAME: travel_user
      DB_PASSWORD: travel_password
      JWT_SECRET: mySecretKey123456789012345678901234567890123456789012345678901234567890
      ALLOWED_ORIGINS: http://localhost:3000,http://localhost:5173
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/api/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: travel-planner-web
    environment:
      VITE_API_URL: http://localhost:8080/api
    ports:
      - "3000:3000"
    depends_on:
      api:
        condition: service_healthy

volumes:
  postgres_data:
    driver: local
